Replit patch (only homepage)
Files:

index.html (homepage)

client/js/universal-homepage.js

1) index.html — make the entire box a <label> target
Replace the current upload box markup with this structure (IDs must match exactly; no inline onclick):

html
Copy
Edit
<div id="home-upload-area" class="upload-area">
  <!-- label makes entire area a native click target -->
  <label for="home-file-input" class="upload-click-target">
    <div class="upload-icon">…</div>
    <h3>Drop your file here or <span class="link">choose file</span></h3>
    <p class="supported-formats">Supports images, PDFs, and many other formats</p>
  </label>

  <!-- real input (hidden) -->
  <input id="home-file-input" type="file" hidden />
</div>

<!-- Optional: a secondary button also wired natively -->
<label for="home-file-input" id="home-choose-btn" class="btn btn-secondary">Choose a File</label>
Add a tiny CSS helper (if not present) so the label fills the box and looks clickable:

css
Copy
Edit
/* homepage only styles */
.upload-area .upload-click-target {
  display: block;
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.upload-area .upload-click-target .link { text-decoration: underline; }
This removes any need for JS to call input.click()—the browser handles it, so no double dialogs, and user-gesture rules are satisfied.

2) client/js/universal-homepage.js — bind only the change handler
Remove the click logic we added earlier. Keep one change listener, guarded so it isn’t added twice:

js
Copy
Edit
// --- BEGIN PATCH: homepage uploader (native label click, single change binding) ---
(() => {
  const input = document.getElementById('home-file-input');
  const area  = document.getElementById('home-upload-area');

  if (!input || !area) return;
  if (input.dataset.bound === '1') return;
  input.dataset.bound = '1';

  // Your existing upload handler (rename if different)
  const handleHomeUpload = async (files) => {
    if (!files || !files.length) return;
    // TODO: call your existing function (don’t duplicate logic)
    // e.g. await startHomepageUpload(files);
  };

  input.addEventListener('change', async (e) => {
    try {
      await handleHomeUpload(e.target.files);
    } catch (err) {
      console.error('Homepage upload failed:', err);
    }
  });
})();
// --- END PATCH ---
That’s it.

Clicking anywhere in the big box or the “Choose a File” button opens the picker once.

No double popups after returning from a conversion page.

Drag & drop still works (unchanged).